# example of featbit pro configuration in exposing services via load balancer with static IPs
# It is recommended to use ingress or ingress-tls to expose services in production.
# ingress-tls depends on your domain cert secret or your cloud provider's cert manager.
# we also recommend using hpa in production. @see standard/featbit-hpa-deployment.yaml

apiExternalUrl: "http://{API Service Public IP Address with port if not 80, ex. 4.194.69.254}"
evaluationServerExternalUrl: "http://{Evaluation Service Public IP Address with port if not 80, ex. 4.193.158.12}"

architecture:
  tier: "professional"
  database: "postgresql"

ui:
  service:
    type: LoadBalancer
    port: 80
    staticIP: {UI Portal Public IP Address, ex. 4.194.13.155}


api:
  service:
    type: LoadBalancer
    port: 80
    staticIP: {API Service Public IP Address, ex. 4.194.69.254}

els:
  service:
    type: LoadBalancer
    port: 80
    staticIP: {Evaluation Service Public IP Address, ex. 4.193.158.12}

# it's recommended to use external postgresql, redis, kafka and clickhouse in production so here deactivate the internal postgresql and redis
postgresql:
  enabled: false
redis:
  enabled: false


externalRedis:
  # set your external redis hosts
  hosts: []
  # - infra-featbit-redis-master:6379
  # set your external redis db index
  db: 0
  # if you set redis ACL, put user here
  user: ""
  # if you set redis auth, create a secret and put the secret name and key here
  existingSecret: ""
  existingSecretPasswordKey: ""


externalPostgresql:
  # set your external postgresql hosts
  hosts: [ ]
  # - infra-featbit-postgresql:5432
  # set your external postgresql db name
  database: "featbit"
  # set your external postgresql user name
  username: "featbit"
  # create a secret and put the secret name and key here
  existingSecret: "external-postgres-pass"
  existingSecretPasswordKey: "password"

externalKafka:
  # - External Kafka brokers. Multiple brokers can be provided as array/list.
  brokers:
    producers:
      hosts: []
      # - infra-featbit-kafka:9092
      # if you enable kafka auth, set auth config as below
      user: ""
      existingSecret: ""
      existingSecretPasswordKey: ""
      mechanism: "PLAIN"
      protocol: "PLAINTEXT"
    consumers:
        hosts: []
        # - infra-featbit-kafka:9092
        # if you enable kafka auth, set auth config as below
        user: ""
        existingSecret: ""
        existingSecretPasswordKey: ""
        mechanism: "PLAIN"
        protocol: "PLAINTEXT"

externalClickhouse:
  # -- Host of the external cluster.
  host: {ClickHouse host name, ex: "infra-featbit-clickhouse"}
  # -- Name of the external cluster to run DDL queries on.
  cluster: {ClickHouse cluster name, ex: "featbit_ch_cluster"}
  # -- Database name for the external cluster
  database: {ClickHouse database, ex: "featbit"}
  # -- Username for the external cluster to connect to the external cluster as
  user: {ClickHouse username, ex: "default"}
  # -- Password for the cluster. Ignored if existingClickhouse.existingSecret is set
  password: {ClickHouse password, ex: "supersecret"}
  # -- Whether to use TLS connection connecting to ClickHouse
  secure: false
  # -- Whether to verify TLS connection connecting to ClickHouse
  verify: false